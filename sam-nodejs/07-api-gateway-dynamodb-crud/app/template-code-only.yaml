# NOTE: template-db.yaml needs to be deployed as well
AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
    TableName:
        Type: String
        Default: DemoTable

Resources:
  DemoDynamoDbCrudApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev

  DemoDynamoDbGetAllLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DemoDynamoDbGetAllLambda
      Handler: get-all-items.handler
      Runtime: nodejs14.x
      Timeout: 10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          DemoDynamoDbParamStoreConfig: !Sub '{"tablename": "${TableName}"}'          
      Events:
        DemoDynamoDbGetAllApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DemoDynamoDbCrudApi
            Path: /items
            Method: GET

  DemoDynamoDbAddItemLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DemoDynamoDbAddItemLambda
      Handler: add-item.handler
      Runtime: nodejs14.x
      Timeout: 10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          DemoDynamoDbParamStoreConfig: !Sub '{"tablename": "${TableName}"}'          
      Events:
        DemoDynamoDbAddItemApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DemoDynamoDbCrudApi
            Path: /items
            Method: POST
